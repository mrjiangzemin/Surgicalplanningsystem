#version 330 core
out vec4 FragColor;

in vec2 TexCoords;





uniform sampler2D texture_diffuse1;
uniform vec3 lightPos;
uniform vec3 lightColor;
uniform vec3 objectColor;
uniform vec3 viewPos;

in vec4 fColor;
in vec3 gNormal;
in vec3 gFragPos;

void main()
{    
    vec3 mycolor = vec3(fColor.x,fColor.y,fColor.z);
	// 环境光
    float ambientStrength = 0.5;
    vec3 ambient = ambientStrength * lightColor;
	
	// 漫反射
	vec3 norm = normalize(gNormal);
    vec3 lightDir = normalize(lightPos - gFragPos);
	float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;
	
	// 镜面光
	float specularStrength = 0.8;
    vec3 viewDir = normalize(viewPos - gFragPos);
    vec3 reflectDir = reflect(-lightDir, norm);  
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
    vec3 specular = specularStrength * spec * lightColor; 

	
	vec3 result = (ambient + diffuse + specular) * mycolor;
	
    FragColor = vec4(result, 1.0);
	//FragColor = fColor;
}